name: pages
on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Minimaler, sicherer Publish-Ordner ohne node_modules etc.
      - name: Prepare site
        run: |
          set -e
          mkdir -p .gh-pages
          # Core-Seiten
          [ -f cards.html ] && cp -v cards.html .gh-pages/
          [ -f detail.html ] && cp -v detail.html .gh-pages/
          # Daten & Skripte
          [ -d data ] && cp -R data .gh-pages/ || true
          [ -d scripts ] && cp -R scripts .gh-pages/ || true
          # ggf. Mock-/API-Dateien aus docs/
          [ -d docs ] && cp -R docs/* .gh-pages/ || true
          # Vite/Tailwind Assets, falls vorhanden
          if [ -d dist/assets ]; then
            mkdir -p .gh-pages/dist
            cp -R dist/assets .gh-pages/dist/
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .gh-pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
